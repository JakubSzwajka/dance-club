# Generated by Django 5.1.5 on 2025-02-02 16:30

import django.core.validators
import django.db.models.deletion
import mydanceclub.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("classes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DanceClassReview",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=mydanceclub.models.generate_uuid,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "group_size",
                    models.FloatField(
                        help_text="Rating (-10 to 10) of the group size. Where -10 is the worst, 0 is perfect and 10 is too much",
                        validators=[
                            django.core.validators.MinValueValidator(-10),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "level",
                    models.FloatField(
                        help_text="Rating (-10 to 10) of the level of the class. Where -10 is the worst, 0 is perfect and 10 is too much",
                        validators=[
                            django.core.validators.MinValueValidator(-10),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "engagement",
                    models.FloatField(
                        help_text="Rating (1 to 10) of the engagement of the class. Where 1 is the worst and 10 is the best",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "teaching_pace",
                    models.FloatField(
                        help_text="Rating (-10 to 10) of the teaching pace of the class. Where -10 is the worst, 0 is perfect and 10 is too much",
                        validators=[
                            django.core.validators.MinValueValidator(-10),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FacilitiesReview",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=mydanceclub.models.generate_uuid,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cleanness",
                    models.FloatField(
                        help_text="Rating (1 to 10) of the facilities cleanliness. Where 1 is the worst and 10 is the best",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstructorReview",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=mydanceclub.models.generate_uuid,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "move_breakdown",
                    models.FloatField(
                        help_text="Rating (-10 to 10) of the instructor's move breakdown. Where -10 is the worst, 0 is perfect and 10 is too much",
                        validators=[
                            django.core.validators.MinValueValidator(-10),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=mydanceclub.models.generate_uuid,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "anonymous_name",
                    models.CharField(
                        blank=True,
                        help_text="Display name for anonymous reviews. Required if user is not provided",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "overall_rating",
                    models.IntegerField(
                        help_text="Overall rating (1-5) for the dance class experience",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        help_text="General comments and observations about the dance class experience"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates whether the review has been verified by staff",
                    ),
                ),
                (
                    "dance_class",
                    models.ForeignKey(
                        help_text="The dance class being reviewed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="classes.danceclass",
                    ),
                ),
                (
                    "dance_class_stats",
                    models.OneToOneField(
                        help_text="Review of the dance class experience",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="reviews.danceclassreview",
                    ),
                ),
                (
                    "facilities_stats",
                    models.OneToOneField(
                        help_text="Review of the supporting facilities and amenities",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="reviews.facilitiesreview",
                    ),
                ),
                (
                    "instructor_stats",
                    models.OneToOneField(
                        help_text="Review of the instructor's teaching approach",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="reviews.instructorreview",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user submitting the review. Can be null for anonymous reviews",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
